using NUnit.Framework;

namespace Day20_RaceCondition.Tests;

[TestFixture]
[TestOf(typeof(CheatFinder))]
public class CheatFinderTests
{

    [Test]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 2, 1 + 1 + 1 + 1 + 1 + 3 + 2 + 4 + 2 + 14 + 14)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 4, 1 + 1 + 1 + 1 + 1 + 3 + 2 + 4 + 2 + 14)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 6, 1 + 1 + 1 + 1 + 1 + 3 + 2 + 4 + 2)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 8, 1 + 1 + 1 + 1 + 1 + 3 + 2 + 4)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 10, 1 + 1 + 1 + 1 + 1 + 3 + 2)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 12, 1 + 1 + 1 + 1 + 1 + 3)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 20, 1 + 1 + 1 + 1 + 1)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 36, 1 + 1 + 1 + 1)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 38, 1 + 1 + 1)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 40, 1 + 1)]
    [TestCase("""
              ###############
              #...#...#.....#
              #.#.#.#.#.###.#
              #S#...#.#.#...#
              #######.#.#.###
              #######.#.#...#
              #######.#.###.#
              ###..E#...#...#
              ###.#######.###
              #...###...#...#
              #.#####.#.###.#
              #.#...#.#.#...#
              #.#.#.#.#.#.###
              #...#...#...###
              ###############
              """, 64, 1)]
    public void Example_Tests(string input, int cheatLimit, int expected) =>
        Assert.That(CheatFinder.FindCheatPositions(input, cheatLimit), Is.EqualTo(expected));
}